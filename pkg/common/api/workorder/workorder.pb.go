// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: workorder/workorder.proto

package carshop

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ServiceType int32

const (
	ServiceType_DIAGNOSTIC   ServiceType = 0
	ServiceType_CHANGE_PARTS ServiceType = 1
	ServiceType_CHANGE_TIRES ServiceType = 2
	ServiceType_WASH         ServiceType = 3
)

// Enum value maps for ServiceType.
var (
	ServiceType_name = map[int32]string{
		0: "DIAGNOSTIC",
		1: "CHANGE_PARTS",
		2: "CHANGE_TIRES",
		3: "WASH",
	}
	ServiceType_value = map[string]int32{
		"DIAGNOSTIC":   0,
		"CHANGE_PARTS": 1,
		"CHANGE_TIRES": 2,
		"WASH":         3,
	}
)

func (x ServiceType) Enum() *ServiceType {
	p := new(ServiceType)
	*p = x
	return p
}

func (x ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_workorder_workorder_proto_enumTypes[0].Descriptor()
}

func (ServiceType) Type() protoreflect.EnumType {
	return &file_workorder_workorder_proto_enumTypes[0]
}

func (x ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceType.Descriptor instead.
func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_workorder_workorder_proto_rawDescGZIP(), []int{0}
}

type WorkOrderStatus int32

const (
	WorkOrderStatus_CREATED        WorkOrderStatus = 0
	WorkOrderStatus_DIAGNOSTICS    WorkOrderStatus = 1
	WorkOrderStatus_CHANGING_PARTS WorkOrderStatus = 2
	WorkOrderStatus_CHANGING_TIRES WorkOrderStatus = 3
	WorkOrderStatus_WASHING        WorkOrderStatus = 4
	WorkOrderStatus_IDLE           WorkOrderStatus = 5
	WorkOrderStatus_FINISHED       WorkOrderStatus = 6
	WorkOrderStatus_DONE           WorkOrderStatus = 7
)

// Enum value maps for WorkOrderStatus.
var (
	WorkOrderStatus_name = map[int32]string{
		0: "CREATED",
		1: "DIAGNOSTICS",
		2: "CHANGING_PARTS",
		3: "CHANGING_TIRES",
		4: "WASHING",
		5: "IDLE",
		6: "FINISHED",
		7: "DONE",
	}
	WorkOrderStatus_value = map[string]int32{
		"CREATED":        0,
		"DIAGNOSTICS":    1,
		"CHANGING_PARTS": 2,
		"CHANGING_TIRES": 3,
		"WASHING":        4,
		"IDLE":           5,
		"FINISHED":       6,
		"DONE":           7,
	}
)

func (x WorkOrderStatus) Enum() *WorkOrderStatus {
	p := new(WorkOrderStatus)
	*p = x
	return p
}

func (x WorkOrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkOrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_workorder_workorder_proto_enumTypes[1].Descriptor()
}

func (WorkOrderStatus) Type() protoreflect.EnumType {
	return &file_workorder_workorder_proto_enumTypes[1]
}

func (x WorkOrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkOrderStatus.Descriptor instead.
func (WorkOrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_workorder_workorder_proto_rawDescGZIP(), []int{1}
}

type WorkOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LicensePlate   string          `protobuf:"bytes,2,opt,name=license_plate,json=licensePlate,proto3" json:"license_plate,omitempty"`
	ChangeTires    bool            `protobuf:"varint,3,opt,name=change_tires,json=changeTires,proto3" json:"change_tires,omitempty"`
	ChangeParts    bool            `protobuf:"varint,4,opt,name=change_parts,json=changeParts,proto3" json:"change_parts,omitempty"`
	Status         WorkOrderStatus `protobuf:"varint,5,opt,name=status,proto3,enum=com.aviebrantz.carshop.WorkOrderStatus" json:"status,omitempty"`
	PreviousStatus WorkOrderStatus `protobuf:"varint,6,opt,name=previous_status,json=previousStatus,proto3,enum=com.aviebrantz.carshop.WorkOrderStatus" json:"previous_status,omitempty"`
}

func (x *WorkOrder) Reset() {
	*x = WorkOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workorder_workorder_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkOrder) ProtoMessage() {}

func (x *WorkOrder) ProtoReflect() protoreflect.Message {
	mi := &file_workorder_workorder_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkOrder.ProtoReflect.Descriptor instead.
func (*WorkOrder) Descriptor() ([]byte, []int) {
	return file_workorder_workorder_proto_rawDescGZIP(), []int{0}
}

func (x *WorkOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkOrder) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *WorkOrder) GetChangeTires() bool {
	if x != nil {
		return x.ChangeTires
	}
	return false
}

func (x *WorkOrder) GetChangeParts() bool {
	if x != nil {
		return x.ChangeParts
	}
	return false
}

func (x *WorkOrder) GetStatus() WorkOrderStatus {
	if x != nil {
		return x.Status
	}
	return WorkOrderStatus_CREATED
}

func (x *WorkOrder) GetPreviousStatus() WorkOrderStatus {
	if x != nil {
		return x.PreviousStatus
	}
	return WorkOrderStatus_CREATED
}

type WorkOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LicensePlate string `protobuf:"bytes,1,opt,name=license_plate,json=licensePlate,proto3" json:"license_plate,omitempty"`
	ChangeTires  bool   `protobuf:"varint,2,opt,name=change_tires,json=changeTires,proto3" json:"change_tires,omitempty"`
	ChangeParts  bool   `protobuf:"varint,3,opt,name=change_parts,json=changeParts,proto3" json:"change_parts,omitempty"`
}

func (x *WorkOrderRequest) Reset() {
	*x = WorkOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workorder_workorder_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkOrderRequest) ProtoMessage() {}

func (x *WorkOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workorder_workorder_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkOrderRequest.ProtoReflect.Descriptor instead.
func (*WorkOrderRequest) Descriptor() ([]byte, []int) {
	return file_workorder_workorder_proto_rawDescGZIP(), []int{1}
}

func (x *WorkOrderRequest) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *WorkOrderRequest) GetChangeTires() bool {
	if x != nil {
		return x.ChangeTires
	}
	return false
}

func (x *WorkOrderRequest) GetChangeParts() bool {
	if x != nil {
		return x.ChangeParts
	}
	return false
}

type RunningWorkOrdersQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type []ServiceType `protobuf:"varint,1,rep,packed,name=type,proto3,enum=com.aviebrantz.carshop.ServiceType" json:"type,omitempty"`
}

func (x *RunningWorkOrdersQuery) Reset() {
	*x = RunningWorkOrdersQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workorder_workorder_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunningWorkOrdersQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningWorkOrdersQuery) ProtoMessage() {}

func (x *RunningWorkOrdersQuery) ProtoReflect() protoreflect.Message {
	mi := &file_workorder_workorder_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningWorkOrdersQuery.ProtoReflect.Descriptor instead.
func (*RunningWorkOrdersQuery) Descriptor() ([]byte, []int) {
	return file_workorder_workorder_proto_rawDescGZIP(), []int{2}
}

func (x *RunningWorkOrdersQuery) GetType() []ServiceType {
	if x != nil {
		return x.Type
	}
	return nil
}

type RunningWorkOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkOrder []*WorkOrder `protobuf:"bytes,1,rep,name=work_order,json=workOrder,proto3" json:"work_order,omitempty"`
}

func (x *RunningWorkOrdersResponse) Reset() {
	*x = RunningWorkOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workorder_workorder_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunningWorkOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningWorkOrdersResponse) ProtoMessage() {}

func (x *RunningWorkOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workorder_workorder_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningWorkOrdersResponse.ProtoReflect.Descriptor instead.
func (*RunningWorkOrdersResponse) Descriptor() ([]byte, []int) {
	return file_workorder_workorder_proto_rawDescGZIP(), []int{3}
}

func (x *RunningWorkOrdersResponse) GetWorkOrder() []*WorkOrder {
	if x != nil {
		return x.WorkOrder
	}
	return nil
}

type StartWorkOrderServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkOrderNumber int64       `protobuf:"varint,1,opt,name=work_order_number,json=workOrderNumber,proto3" json:"work_order_number,omitempty"`
	Type            ServiceType `protobuf:"varint,2,opt,name=type,proto3,enum=com.aviebrantz.carshop.ServiceType" json:"type,omitempty"`
}

func (x *StartWorkOrderServiceRequest) Reset() {
	*x = StartWorkOrderServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workorder_workorder_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartWorkOrderServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkOrderServiceRequest) ProtoMessage() {}

func (x *StartWorkOrderServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workorder_workorder_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkOrderServiceRequest.ProtoReflect.Descriptor instead.
func (*StartWorkOrderServiceRequest) Descriptor() ([]byte, []int) {
	return file_workorder_workorder_proto_rawDescGZIP(), []int{4}
}

func (x *StartWorkOrderServiceRequest) GetWorkOrderNumber() int64 {
	if x != nil {
		return x.WorkOrderNumber
	}
	return 0
}

func (x *StartWorkOrderServiceRequest) GetType() ServiceType {
	if x != nil {
		return x.Type
	}
	return ServiceType_DIAGNOSTIC
}

type FinishWorkOrderServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkOrderNumber int64       `protobuf:"varint,1,opt,name=work_order_number,json=workOrderNumber,proto3" json:"work_order_number,omitempty"`
	Type            ServiceType `protobuf:"varint,2,opt,name=type,proto3,enum=com.aviebrantz.carshop.ServiceType" json:"type,omitempty"`
}

func (x *FinishWorkOrderServiceRequest) Reset() {
	*x = FinishWorkOrderServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workorder_workorder_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishWorkOrderServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishWorkOrderServiceRequest) ProtoMessage() {}

func (x *FinishWorkOrderServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workorder_workorder_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishWorkOrderServiceRequest.ProtoReflect.Descriptor instead.
func (*FinishWorkOrderServiceRequest) Descriptor() ([]byte, []int) {
	return file_workorder_workorder_proto_rawDescGZIP(), []int{5}
}

func (x *FinishWorkOrderServiceRequest) GetWorkOrderNumber() int64 {
	if x != nil {
		return x.WorkOrderNumber
	}
	return 0
}

func (x *FinishWorkOrderServiceRequest) GetType() ServiceType {
	if x != nil {
		return x.Type
	}
	return ServiceType_DIAGNOSTIC
}

type EndWorkOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkOrderNumber int64 `protobuf:"varint,1,opt,name=work_order_number,json=workOrderNumber,proto3" json:"work_order_number,omitempty"`
}

func (x *EndWorkOrderRequest) Reset() {
	*x = EndWorkOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workorder_workorder_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndWorkOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndWorkOrderRequest) ProtoMessage() {}

func (x *EndWorkOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workorder_workorder_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndWorkOrderRequest.ProtoReflect.Descriptor instead.
func (*EndWorkOrderRequest) Descriptor() ([]byte, []int) {
	return file_workorder_workorder_proto_rawDescGZIP(), []int{6}
}

func (x *EndWorkOrderRequest) GetWorkOrderNumber() int64 {
	if x != nil {
		return x.WorkOrderNumber
	}
	return 0
}

var File_workorder_workorder_proto protoreflect.FileDescriptor

var file_workorder_workorder_proto_rawDesc = []byte{
	0x0a, 0x19, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x76, 0x69, 0x65, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x7a, 0x2e, 0x63, 0x61, 0x72, 0x73,
	0x68, 0x6f, 0x70, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99,
	0x02, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x72, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x69, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x76,
	0x69, 0x65, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x7a, 0x2e, 0x63, 0x61, 0x72, 0x73, 0x68, 0x6f, 0x70,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x50, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x76, 0x69, 0x65, 0x62, 0x72, 0x61, 0x6e,
	0x74, 0x7a, 0x2e, 0x63, 0x61, 0x72, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7d, 0x0a, 0x10, 0x57, 0x6f,
	0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69,
	0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x69, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x22, 0x51, 0x0a, 0x16, 0x52, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x76, 0x69, 0x65, 0x62, 0x72, 0x61, 0x6e,
	0x74, 0x7a, 0x2e, 0x63, 0x61, 0x72, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5d, 0x0a, 0x19,
	0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x76, 0x69, 0x65, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x7a, 0x2e, 0x63,
	0x61, 0x72, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x1c,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x76, 0x69,
	0x65, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x7a, 0x2e, 0x63, 0x61, 0x72, 0x73, 0x68, 0x6f, 0x70, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x84, 0x01, 0x0a, 0x1d, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x76, 0x69, 0x65, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x7a, 0x2e, 0x63,
	0x61, 0x72, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x45, 0x6e, 0x64, 0x57,
	0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2a, 0x4b, 0x0a, 0x0b, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49,
	0x41, 0x47, 0x4e, 0x4f, 0x53, 0x54, 0x49, 0x43, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x49, 0x52, 0x45, 0x53, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x57, 0x41, 0x53, 0x48, 0x10, 0x03, 0x2a, 0x86, 0x01, 0x0a, 0x0f, 0x57, 0x6f, 0x72,
	0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x49, 0x41,
	0x47, 0x4e, 0x4f, 0x53, 0x54, 0x49, 0x43, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x53, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x49, 0x52, 0x45, 0x53,
	0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x53, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12,
	0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x49, 0x4e,
	0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45, 0x10,
	0x07, 0x32, 0x81, 0x06, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x76, 0x69, 0x65, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x7a, 0x2e, 0x63, 0x61, 0x72,
	0x73, 0x68, 0x6f, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x68,
	0x6f, 0x70, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12,
	0x98, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x6f,
	0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x76, 0x69, 0x65, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x7a, 0x2e, 0x63, 0x61, 0x72, 0x73, 0x68, 0x6f,
	0x70, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x76, 0x69, 0x65, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x7a, 0x2e, 0x63, 0x61, 0x72, 0x73, 0x68, 0x6f,
	0x70, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x68, 0x6f, 0x70,
	0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0xa1, 0x01, 0x0a, 0x15, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x76, 0x69, 0x65, 0x62,
	0x72, 0x61, 0x6e, 0x74, 0x7a, 0x2e, 0x63, 0x61, 0x72, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x1a, 0x2f, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x61, 0x72, 0x73, 0x68, 0x6f, 0x70, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xa4,
	0x01, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x76, 0x69, 0x65, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x7a, 0x2e, 0x63, 0x61, 0x72, 0x73, 0x68,
	0x6f, 0x70, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35,
	0x1a, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x68, 0x6f, 0x70, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x7d, 0x2f, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x3a, 0x01, 0x2a, 0x12, 0x8d, 0x01, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x57, 0x6f, 0x72,
	0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x76, 0x69,
	0x65, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x7a, 0x2e, 0x63, 0x61, 0x72, 0x73, 0x68, 0x6f, 0x70, 0x2e,
	0x45, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x38, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x32, 0x1a, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x68, 0x6f, 0x70,
	0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x7d, 0x2f, 0x65,
	0x6e, 0x64, 0x3a, 0x01, 0x2a, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x63, 0x61, 0x72, 0x73, 0x68,
	0x6f, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_workorder_workorder_proto_rawDescOnce sync.Once
	file_workorder_workorder_proto_rawDescData = file_workorder_workorder_proto_rawDesc
)

func file_workorder_workorder_proto_rawDescGZIP() []byte {
	file_workorder_workorder_proto_rawDescOnce.Do(func() {
		file_workorder_workorder_proto_rawDescData = protoimpl.X.CompressGZIP(file_workorder_workorder_proto_rawDescData)
	})
	return file_workorder_workorder_proto_rawDescData
}

var file_workorder_workorder_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_workorder_workorder_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_workorder_workorder_proto_goTypes = []interface{}{
	(ServiceType)(0),                      // 0: com.aviebrantz.carshop.ServiceType
	(WorkOrderStatus)(0),                  // 1: com.aviebrantz.carshop.WorkOrderStatus
	(*WorkOrder)(nil),                     // 2: com.aviebrantz.carshop.WorkOrder
	(*WorkOrderRequest)(nil),              // 3: com.aviebrantz.carshop.WorkOrderRequest
	(*RunningWorkOrdersQuery)(nil),        // 4: com.aviebrantz.carshop.RunningWorkOrdersQuery
	(*RunningWorkOrdersResponse)(nil),     // 5: com.aviebrantz.carshop.RunningWorkOrdersResponse
	(*StartWorkOrderServiceRequest)(nil),  // 6: com.aviebrantz.carshop.StartWorkOrderServiceRequest
	(*FinishWorkOrderServiceRequest)(nil), // 7: com.aviebrantz.carshop.FinishWorkOrderServiceRequest
	(*EndWorkOrderRequest)(nil),           // 8: com.aviebrantz.carshop.EndWorkOrderRequest
	(*empty.Empty)(nil),                   // 9: google.protobuf.Empty
}
var file_workorder_workorder_proto_depIdxs = []int32{
	1,  // 0: com.aviebrantz.carshop.WorkOrder.status:type_name -> com.aviebrantz.carshop.WorkOrderStatus
	1,  // 1: com.aviebrantz.carshop.WorkOrder.previous_status:type_name -> com.aviebrantz.carshop.WorkOrderStatus
	0,  // 2: com.aviebrantz.carshop.RunningWorkOrdersQuery.type:type_name -> com.aviebrantz.carshop.ServiceType
	2,  // 3: com.aviebrantz.carshop.RunningWorkOrdersResponse.work_order:type_name -> com.aviebrantz.carshop.WorkOrder
	0,  // 4: com.aviebrantz.carshop.StartWorkOrderServiceRequest.type:type_name -> com.aviebrantz.carshop.ServiceType
	0,  // 5: com.aviebrantz.carshop.FinishWorkOrderServiceRequest.type:type_name -> com.aviebrantz.carshop.ServiceType
	3,  // 6: com.aviebrantz.carshop.WorkOrderService.RegisterWorkOrder:input_type -> com.aviebrantz.carshop.WorkOrderRequest
	4,  // 7: com.aviebrantz.carshop.WorkOrderService.GetRunningWorkOrders:input_type -> com.aviebrantz.carshop.RunningWorkOrdersQuery
	6,  // 8: com.aviebrantz.carshop.WorkOrderService.StartWorkOrderService:input_type -> com.aviebrantz.carshop.StartWorkOrderServiceRequest
	7,  // 9: com.aviebrantz.carshop.WorkOrderService.FinishWorkOrderService:input_type -> com.aviebrantz.carshop.FinishWorkOrderServiceRequest
	8,  // 10: com.aviebrantz.carshop.WorkOrderService.EndWorkOrder:input_type -> com.aviebrantz.carshop.EndWorkOrderRequest
	9,  // 11: com.aviebrantz.carshop.WorkOrderService.RegisterWorkOrder:output_type -> google.protobuf.Empty
	5,  // 12: com.aviebrantz.carshop.WorkOrderService.GetRunningWorkOrders:output_type -> com.aviebrantz.carshop.RunningWorkOrdersResponse
	9,  // 13: com.aviebrantz.carshop.WorkOrderService.StartWorkOrderService:output_type -> google.protobuf.Empty
	9,  // 14: com.aviebrantz.carshop.WorkOrderService.FinishWorkOrderService:output_type -> google.protobuf.Empty
	9,  // 15: com.aviebrantz.carshop.WorkOrderService.EndWorkOrder:output_type -> google.protobuf.Empty
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_workorder_workorder_proto_init() }
func file_workorder_workorder_proto_init() {
	if File_workorder_workorder_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_workorder_workorder_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workorder_workorder_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workorder_workorder_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunningWorkOrdersQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workorder_workorder_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunningWorkOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workorder_workorder_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartWorkOrderServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workorder_workorder_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishWorkOrderServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workorder_workorder_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndWorkOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_workorder_workorder_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_workorder_workorder_proto_goTypes,
		DependencyIndexes: file_workorder_workorder_proto_depIdxs,
		EnumInfos:         file_workorder_workorder_proto_enumTypes,
		MessageInfos:      file_workorder_workorder_proto_msgTypes,
	}.Build()
	File_workorder_workorder_proto = out.File
	file_workorder_workorder_proto_rawDesc = nil
	file_workorder_workorder_proto_goTypes = nil
	file_workorder_workorder_proto_depIdxs = nil
}
